<?xml version="1.0" encoding="UTF-8"?>
{{range . -}}
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.2.1">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Postman Collection Import" enabled="true">
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="{{.info.name}}" enabled="true">
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">5</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration">0</stringProp>
        <stringProp name="ThreadGroup.delay">0</stringProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
{{template "folder" . -}}
{{if hasKey . "variable" -}}
{{if .variable -}}
{{if len .variable -}}
{{"        "}}<Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments">
{{range .variable -}}
{{"            "}}<elementProp name="{{.key}}" elementType="Argument">
              <stringProp name="Argument.name">{{.key}}</stringProp>
              <stringProp name="Argument.value">{{(html .value) | replace "\n" "&#xd;\n"}}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
{{end -}}
{{"          "}}</collectionProp>
        </Arguments>
        <hashTree/>
{{end -}}
{{end -}}
{{end -}}
{{"      "}}</hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
{{- end -}}

{{define "folder" -}}
  {{if (hasKey . "item") -}}
    {{range .item -}}
      {{template "folder" . -}}
    {{end -}}
  {{else -}}
    {{template "item" . -}}
  {{end -}}
{{end -}}

{{define "item" -}}
{{$hasAdditionalHashTree := false -}}
{{""}}        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="{{.name}}" enabled="true">
{{if (hasKey .request "body") -}}
{{if (hasKey .request.body "raw") -}}
{{""}}          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{{(html .request.body.raw) | replace "\n" "&#xd;\n"}}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
{{else if (hasKey .request.body "urlencoded") -}}
{{""}}          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
{{range .request.body.urlencoded -}}
{{""}}              <elementProp name="{{.key}}" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{{html (regexReplaceAll "{{([\\w-]+)}}" .value "${${1}}")}}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">{{.key}}</stringProp>
              </elementProp>
{{end -}}
{{""}}            </collectionProp>
          </elementProp>
{{end -}}
{{else -}}
{{""}}          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
{{ end -}}
{{""}}          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.method">{{.request.method}}</stringProp>
          <stringProp name="HTTPSampler.domain">{{regexReplaceAll "{{([\\w-]+)}}" (.request.url.host | join ".") "${${1}}"}}</stringProp>
          <stringProp name="HTTPSampler.path">/{{regexReplaceAll "/:([\\w-]+)" (regexReplaceAll "{{([\\w-]+)}}" (.request.url.path | join "/") "${${1}}") "/${${1}}"}}</stringProp>
          <stringProp name="HTTPSampler.protocol">{{coalesce .request.url.protocol "http"}}</stringProp>
        </HTTPSamplerProxy>
{{if hasKey .request "header" -}}
{{if len .request.header -}}
{{$hasAdditionalHashTree = true -}}
{{""}}        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
{{range .request.header -}}
{{""}}              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">{{.key}}</stringProp>
                <stringProp name="Header.value">{{html (regexReplaceAll "{{([\\w-]+)}}" .value "${${1}}")}}</stringProp>
              </elementProp>
{{end -}}
{{""}}            </collectionProp>
          </HeaderManager>
        </hashTree>
{{end -}}
{{end -}}
{{if hasKey .request.url "variable" -}}
{{if len .request.url.variable -}}
{{$hasAdditionalHashTree = true -}}
{{""}}        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
{{range .request.url.variable -}}
{{""}}              <elementProp name="statusCode" elementType="Argument">
                <stringProp name="Argument.name">{{.key}}</stringProp>
                <stringProp name="Argument.value">{{html (regexReplaceAll "{{([\\w-]+)}}" (.value | join ",") "${${1}}")}}</stringProp>
                <stringProp name="Argument.desc">{{html .description}}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
{{end -}}
{{end -}}
{{""}}            </collectionProp>
          </Arguments>
          <hashTree/>
        </hashTree>
{{end -}}
{{if not $hasAdditionalHashTree -}}
{{""}}        <hashTree/>
{{end -}}
{{end}}
